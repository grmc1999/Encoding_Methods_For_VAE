{
    "experiment_state": "waiting",
    "optimizer": {
        "lr": 0.001,
        "capturable": false
    },
    "trainer": {
        "model": null,
        "epochs": 50,
        "folds": 2,
        "batch_size": 2048,
        "use_cuda": true,
        "data_dir": null,
        "in_device": "cuda:0",
        "num_workers": 10,
        "args": [
            "x"
        ]
    },
    "transforms": {
        "Tuple_to_dict": {},
        "MultiInputToTensor": {
            "metadata": []
        }
    },
    "model": {
        "model_class": "pytorch_VAE",
        "model_name": "Unpaired_Flexible_Encoding_Decoding_VAE",
        "sub_modules": {
            "encoding_decoding_module": {
                "module_type": "Asymmetrical_CNN_DNN_EDM",
                "parameters": {
                    "encoder_parameters": {
                        "inp_sizes": [
                            784,
                            737,
                            696,
                            660,
                            627,
                            597,
                            570,
                            545,
                            522,
                            501,
                            482,
                            464,
                            448,
                            432,
                            418,
                            404,
                            392
                        ],
                        "activators": {
                            "name": "LeakyReLU",
                            "params": {}
                        },
                        "batch_norm": false,
                        "dropout": null
                    },
                    "decoder_parameters": {
                        "image_shape": [
                            28,
                            28,
                            1
                        ],
                        "patch_shape": [
                            7,
                            7
                        ],
                        "Transformer_layers_sizes": [
                            392
                        ],
                        "Attention_mechanisms": "Dot_product_attention",
                        "layers_heads": [
                            4
                        ],
                        "layer_head_sizes": [
                            100
                        ],
                        "dropout": 0.5,
                        "batch_norm": false,
                        "pre_batch_norm": false,
                        "pre_activator": {
                            "name": "LeakyReLU",
                            "params": {}
                        },
                        "pre_dropout": 0.5
                    },
                    "flat": false,
                    "deflat": true,
                    "compression_factor": 0.5,
                    "i_shape": [
                        28,
                        28
                    ],
                    "Enc_type": "DNN_ENC",
                    "Dec_type": "ViT_DEC"
                }
            },
            "P_NET": {
                "variational_generation_type": "VAE_NETs",
                "parameters": {
                    "layer_size": [
                        392,
                        196
                    ],
                    "dec_activators": {
                        "name": "LeakyReLU",
                        "params": {}
                    },
                    "batch_norm": false,
                    "dropout": null
                }
            },
            "Q_NET": {
                "variational_generation_type": "VAE_NETs",
                "parameters": {
                    "layer_size": [
                        392,
                        392
                    ],
                    "enc_activators": {
                        "name": "Sigmoid",
                        "params": {}
                    },
                    "batch_norm": false,
                    "dropout": null
                }
            }
        },
        "model_params": {
            "losses_weigths": {
                "reconstructive": 0.5,
                "generative": 0.5
            },
            "resize": [
                28,
                28
            ]
        }
    },
    "error": "If capturable=False, state_steps should not be CUDA tensors."
}